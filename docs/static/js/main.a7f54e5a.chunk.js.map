{"version":3,"sources":["components/AddCategory/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem/GifGridItem.jsx","components/GifGrid/GifGrid.jsx","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","images","original","title","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","image","App","ReactDOM","render","document","getElementById"],"mappings":"kRAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC5CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,YAAY,eACZC,MAAOV,EACPW,SAnBmB,SAACR,GACxBF,EAAcE,EAAES,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,yFAEgEC,UAAWH,GAF3E,qBAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAACF,GACrB,MAAO,CACLG,GAAIH,EAAKG,GACTR,IAAKK,EAAKI,OAAOC,SAASV,IAC1BW,MAAON,EAAKM,UAVK,kBAcdL,GAdc,4CAAH,sDCEPM,G,MAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBG,EAAiB,EAAjBA,MAAOX,EAAU,EAAVA,IAEvC,OACE,sBAAKa,UAAU,yCAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKJ,IACpB,4BAAIA,SCJGK,G,MAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCsB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAAChB,GACtBiB,YAAY,WACVH,EAAS,CAAEd,KAAMA,EAAMY,SAAS,MAC/B,UAEJ,CAACnB,IAEGoB,EDb0BK,CAAazB,GAAjCW,EAD0B,EAC/BJ,KAAaY,EADkB,EAClBA,QAErB,OACE,qCACE,6BAAKnB,IACJmB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SACGJ,EAAOF,KAAI,SAACiB,GACX,OAAO,cAAC,EAAD,eAAgCA,GAAdA,EAAMhB,cER5BiB,EAAM,WAAO,IAAD,EACa1C,mBAAS,CAAC,eADvB,mBAChBQ,EADgB,KACJT,EADI,KAGvB,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGS,EAAWgB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCT/B4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a7f54e5a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./AddCategory.css\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const hableInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmite = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories( categories => [inputValue,...categories])\r\n      setInputValue(\"\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmite}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add Category\"\r\n        value={inputValue}\r\n        onChange={hableInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category) => {\r\n  const url =\r\n    `http://api.giphy.com/v1/gifs/search?api_key=oBzdrIoXRePjP71ync4RXn0SxeThaJKc&q=${ encodeURI( category ) }&limit=5`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((data) => {\r\n    return {\r\n      id: data.id,\r\n      url: data.images.original.url,\r\n      title: data.title,\r\n    };\r\n  });\r\n\r\n  return gifs\r\n};","import \"./GifGridItem.css\"\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n  return (\r\n    <div className='card animate__animated animate__bounce'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { useFetchGifs } from '../../hooks/useFetchGifs.js';\r\nimport { GifGridItem } from '../GifGridItem/GifGridItem.jsx';\r\nimport './GifGrid.css';\r\nexport const GifGrid = ({ category }) => {\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading...</p> }\r\n      <div className='card-grid'>\r\n        {images.map((image) => {\r\n          return <GifGridItem key={image.id} {...image} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((data) => {\r\n      setTimeout( () => {\r\n        setState({ data: data, loading: false })\r\n      }, 3000)\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory/AddCategory';\r\nimport { GifGrid } from './components/GifGrid/GifGrid';\r\n\r\nexport const App = () => {\r\n  const [categories, setCategories] = useState(['Stray kids']);\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => {\r\n          return <GifGrid key={category} category={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}